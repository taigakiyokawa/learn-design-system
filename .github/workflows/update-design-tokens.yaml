name: Update Design Tokens
on:
  repository_dispatch:
    types: [test]

jobs:
  generate-tokens:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set branch name
        env:
          TZ: 'Asia/Tokyo'
        run: echo "WORK_BRANCH=$('update-design-tokens' + '-' + date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Create new branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git switch -c ${{ env.WORK_BRANCH }}
          git push -u origin ${{ env.WORK_BRANCH }}

      - name: Setup Node.js
        run: echo "NODE_VERSION=$(cat .node-version)" >> $GITHUB_ENV
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        shell: bash
        run: |
          pnpm=$(cat package.json | jq -r .engines.pnpm)
          echo "PNPM_VERSION=${pnpm}" >> $GITHUB_ENV
      - uses: pnpm/action-setup@v2.2.4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install

      - name: Run generate-tokens script
        run: >
          FIGMA_FILE_KEY=${{ secrets.FIGMA_FILE_KEY}}
          FIGMA_PERSONAL_ACCESS_TOKEN=${{ secrets.FIGMA_PERSONAL_ACCESS_TOKEN}}
          pnpm design-tokens build

      - name: Check for changes
        id: changes
        run: |
          if [[ `git status --porcelain` ]]; then
            echo "::set-output name=has_changes::true"
          else
            echo "::set-output name=has_changes::false"
          fi

      - name: Commit and push changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "Update tokens"
          git push origin ${{ env.WORK_BRANCH }}

      - name: Create pull request
        if: steps.changes.outputs.has_changes == 'true'
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ env.WORK_BRANCH }}
          destination_branch: ${{ github.event.repository.default_branch }}
          pr_title: 'Update tokens'
          pr_body: 'Automatically generated by Generate Tokens workflow'

      - name: Delete branch
        if: steps.changes.outputs.has_changes == 'false'
        run: git push origin --delete ${{ env.WORK_BRANCH }}
